{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst button = document.querySelector('[data-start]');\nconst daysStr = document.querySelector('[data-days]');\nconst hoursStr = document.querySelector('[data-hours]');\nconst minutesStr = document.querySelector('[data-minutes]');\nconst secondsStr = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nlet intervalID = null;\nbutton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0].getTime();\n    if (userSelectedDate <= Date.now()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n      });\n      button.disabled = true;\n    } else {\n      button.disabled = false;\n    }\n  },\n};\nflatpickr(input, options);\n\nfunction onStartBtnClick() {\n  button.disabled = true;\n  intervalID = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n    if (diff <= 0) {\n      return clearInterval(intervalID);\n    }\n    const time = convertMs(diff);\n    const { days, hours, minutes, seconds } = time;\n    daysStr.textContent = addLeadingZero(days);\n    hoursStr.textContent = addLeadingZero(hours);\n    minutesStr.textContent = addLeadingZero(minutes);\n    secondsStr.textContent = addLeadingZero(seconds);\n  }, 1000);\n}\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nbutton.addEventListener('click', onStartBtnClick);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["input","button","daysStr","hoursStr","minutesStr","secondsStr","userSelectedDate","intervalID","options","selectedDates","iziToast","flatpickr","onStartBtnClick","diff","time","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"0IAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EAE1D,IAAIC,EACAC,EAAa,KACjBN,EAAO,SAAW,GAElB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,GAAG,QAAO,EACvCH,GAAoB,KAAK,OAC3BI,EAAS,MAAM,CACb,QAAS,oCACjB,CAAO,EACDT,EAAO,SAAW,IAElBA,EAAO,SAAW,EAErB,CACH,EACAU,EAAUX,EAAOQ,CAAO,EAExB,SAASI,GAAkB,CACzBX,EAAO,SAAW,GAClBM,EAAa,YAAY,IAAM,CAC7B,MAAMM,EAAOP,EAAmB,KAAK,IAAG,EACxC,GAAIO,GAAQ,EACV,OAAO,cAAcN,CAAU,EAEjC,MAAMO,EAAOC,EAAUF,CAAI,EACrB,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKL,EAC1CZ,EAAQ,YAAckB,EAAeJ,CAAI,EACzCb,EAAS,YAAciB,EAAeH,CAAK,EAC3Cb,EAAW,YAAcgB,EAAeF,CAAO,EAC/Cb,EAAW,YAAce,EAAeD,CAAO,CAChD,EAAE,GAAI,CACT,CACA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEApB,EAAO,iBAAiB,QAASW,CAAe,EAEhD,SAASG,EAAUO,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}